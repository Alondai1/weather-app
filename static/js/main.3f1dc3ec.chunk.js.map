{"version":3,"sources":["components/Header/Header.cmp.jsx","store/types.js","services/UtilService.js","services/WeatherService.js","store/actions/weatherActions.js","services/UserService.js","store/actions/appActions.js","components/SearchBar/SearchBar.cmp.jsx","components/ForecastPreview/ForecastPreview.cmp.jsx","components/ForecastList/ForecastList.cmp.jsx","pages/HomePage/HomePage.cmp.jsx","components/Segment/Segment.cmp.jsx","components/FavoritePreview/FavoritePreview.cmp.jsx","components/FavoritesList/FavoritesList.cmp.jsx","pages/FavoritesPage/FavoritesPage.cmp.jsx","App.js","serviceWorker.js","store/reducers/index.js","store/reducers/weatherReducer.js","store/reducers/appReducer.js","index.js"],"names":["Header","react_default","a","createElement","className","react_router_dom","to","src","alt","types","FETCH_AUTOCOMPLETE","FETCH_CURRENTWEATHER","FETCH_FORECAST","SET_CURRENTCITY","FETCH_FAVORITES","TOGGLE_FAVORITE","UtilService","store","key","any","localStorage","JSON","stringify","load","str","parse","getUserLocation","navigator","geolocation","Promise","resolve","reject","getCurrentPosition","API_KEY","WeatherService","getNextDaysForecast","getSearchResults","getUserCity","getCityInfo","_callee","cityId","res","regenerator_default","wrap","_context","prev","next","axios","get","concat","sent","abrupt","data","t0","stop","_callee2","value","_context2","_callee3","coords","lat","lon","cityObj","_context3","utilService","latitude","longitude","id","ParentCity","Key","description","Country","EnglishName","title","isFav","_callee4","_context4","cityKey","dispatch","weatherService","then","response","type","arguments","length","undefined","createAction","catch","error","UserService","getFavorites","userFavorites","gFavorites","toggleFavorite","city","idx","findIndex","fav","push","splice","setCurrentCity","userService","SearchBar","state","searchValue","userInput","results","handleResultSelect","e","_ref","result","_this","props","setState","handleSearchChange","_ref2","filter","map","LocalizedName","Search","placeholder","onResultSelect","this","onSearchChange","React","Component","ForecastPreview","Ftemperature","day","Temperature","Maximum","Value","Ctemperature","Math","round","iconKey","Day","Icon","dateToFormat","Date","Card","Image","wrapped","ui","Content","dist_default","format","Meta","IconPhrase","Description","toggleCF","extra","href","Link","name","ForecastList","nextDaysForecast","DailyForecasts","ForecastPreview_cmp","HomePage","popupIsOpen","isLoaderActive","handleToggleFavorite","currentCity","timeout","setTimeout","Object","objectSpread","err","toast","userCity","message","clearTimeout","react_addons_css_transition_group_default","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","transitionName","SearchBar_cmp","Popup","trigger","content","on","open","onOpen","onClose","handlePopupClose","position","Headline","Text","Button","onClick","basic","color","ForecastList_cmp","Loader","active","connect","_ref3","weatherReducer","appReducer","SegmentCmp","Segment","Header_Header","icon","FavoritePreview","cityInfo","history","WeatherIcon","WeatherText","Metric","withRouter","FavoritesList","favorites","FavoritePreview_cmp","FavoritesPage","FavoritesList_cmp","Segment_cmp","App","react_toastify","Header_cmp","react_router","exact","path","component","Boolean","window","location","hostname","match","combinedReducer","combineReducers","action","cuurentCity","middleware","thunk","createStore","reducer","applyMiddleware","apply","ReactDOM","render","es","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f1dc3ec.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Header.style.scss\";\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <NavLink to=\"/\">\n        <img\n          src=\"https://herolo.co.il/assets/img/navbar/logo.png\"\n          className=\"brand brand-logo left\"\n          alt=\"\"\n        />\n      </NavLink>\n      <ul className=\"right\">\n        <li>\n          <NavLink className=\"link\" to=\"/favorites\">\n            FAVORITES\n          </NavLink>\n        </li>\n        <li>\n          <NavLink className=\"link\" to=\"/\">\n            HOME\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Header;\n","const types = {\n  FETCH_AUTOCOMPLETE: \"FETCH_AUTOCOMPLETE\",\n  FETCH_CURRENTWEATHER: \"FETCH_CURRENTWEATHER\",\n  FETCH_FORECAST: \"FETCH_FORECAST\",\n  SET_CURRENTCITY: \"SET_CURRENTCITY\",\n  FETCH_FAVORITES: \"FETCH_FAVORITES\",\n  TOGGLE_FAVORITE: \" TOGGLE_FAVORITE\",\n};\nexport default types;\n","export default {\n  store,\n  load,\n  getUserLocation,\n};\n\nfunction store(key, any) {\n  localStorage[key] = JSON.stringify(any);\n}\n\nfunction load(key) {\n  var str = localStorage[key] || \"null\";\n  return JSON.parse(str);\n}\n\nfunction getUserLocation() {\n  if (!navigator.geolocation) {\n    return;\n  } else {\n    return new Promise(function(resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  }\n}\n","import axios from \"axios\";\nimport utilService from \"./UtilService\";\n\nconst API_KEY = \" m9lAGyPN4SxWZAFBBSghB43DxuBB1VDj \";\n\nexport default {\n  getNextDaysForecast,\n  getSearchResults,\n  getUserCity,\n  getCityInfo,\n};\n\nasync function getNextDaysForecast(cityId) {\n  try {\n    const res = await axios.get(\n      `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityId}?apikey=${API_KEY}`\n    );\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n}\n\nasync function getSearchResults(value) {\n  try {\n    const res = await axios.get(\n      `https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=${API_KEY}&q=${value}`\n    );\n    return res.data;\n  } catch (err) {\n    throw err;\n  }\n}\n\nasync function getUserCity() {\n  const coords = await utilService.getUserLocation();\n  if (!coords) return;\n  const lat = coords.coords.latitude;\n  const lon = coords.coords.longitude;\n  try {\n    const res = await axios.get(\n      `https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=${API_KEY}&q=${lat}%2C${lon}`\n    );\n    const cityObj = {\n      id: res.data.ParentCity.Key,\n      description: res.data.Country.EnglishName,\n      title: res.data.EnglishName,\n      isFav: false,\n    };\n    return cityObj;\n  } catch (err) {\n    throw err;\n  }\n}\n\nasync function getCityInfo(cityId) {\n  try {\n    const res = await axios.get(\n      `https://dataservice.accuweather.com/currentconditions/v1/${cityId}?apikey=${API_KEY}`\n    );\n    return res.data[0];\n  } catch (err) {\n    throw err;\n  }\n}\n","import types from \"../types\";\nimport weatherService from \"../../services/WeatherService\";\n\n\n\nexport const createAction = (data , type = '') => {\n    return {\n      type,\n      data\n    }\n  };\n\n  // -----------------------------------------------------------------------------\n  export const getNextDaysForecast = (cityKey) => {    \n    return (dispatch) => {\n      return  weatherService.getNextDaysForecast(cityKey)\n        .then(response => {          \n          dispatch(createAction(response, types.FETCH_FORECAST))\n        })\n        .catch(error => {\n          throw(error);\n        });\n    };\n  };\n  ","import utilService from \"./UtilService\";\n\nexport default {\n  getFavorites,\n  toggleFavorite,\n  \n};\n\nconst gFavorites = [];\n\n\nfunction getFavorites() {\n  let userFavorites = utilService.load(\"favorites\");\n  if (!userFavorites) userFavorites = gFavorites;\n  utilService.store(\"favorites\", userFavorites);\n  return new Promise((resolve, reject) => {\n    resolve(userFavorites);\n  });\n}\n\nfunction toggleFavorite(city) {\n  let userFavorites = utilService.load(\"favorites\");\n  if (!userFavorites) userFavorites = gFavorites;\n  const idx = userFavorites.findIndex(fav => fav.id === city.id);\n  if (idx < 0) {\n    city.isFav = true;\n    userFavorites.push(city);\n  } else {\n    userFavorites.splice(idx, 1);\n  }\n  utilService.store(\"favorites\", userFavorites);\n  return new Promise((resolve, reject) => {\n    resolve(userFavorites);\n  });\n}\n","import types from \"../types\";\nimport userService from \"../../services/UserService\";\n\nexport const createAction = (data, type = \"\") => {\n  return {\n    type,\n    data,\n  };\n};\n\n//   ------------------------------------------------------------------\n\nexport const setCurrentCity = city => {\n  return dispatch => {\n    return dispatch(createAction(city, types.SET_CURRENTCITY));\n  };\n};\n\nexport const getFavorites = () => {\n  return dispatch => {\n    return userService\n      .getFavorites()\n      .then(response => {\n        dispatch(createAction(response, types.FETCH_FAVORITES));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n\nexport const toggleFavorite = city => {\n  return dispatch => {\n    return userService\n      .toggleFavorite(city)\n      .then(response => {\n        dispatch(createAction(response, types.TOGGLE_FAVORITE));\n      })\n      .catch(error => {\n        throw error;\n      });\n  };\n};\n","import React from \"react\";\nimport { Search } from \"semantic-ui-react\";\nimport \"./SearchBar.style.scss\";\nimport weatherService from \"../../services/WeatherService\";\n\nclass SearchBar extends React.Component {\n  state = {\n    searchValue: \"\",\n    userInput: \"\",\n    results: [],\n  };\n\n  handleResultSelect = (e, { result }) => {\n    this.props.setCurrentCity(result);\n    this.setState({ userInput: \"\" });\n  };\n\n  handleSearchChange = async (e, { value }) => {\n    this.setState({ userInput: value });\n    const res = await weatherService.getSearchResults(value);\n    if (res) {\n      const results = res\n        .filter((result, idx) => idx < 6)\n        .map(result => {\n          return {\n            title: result.LocalizedName,\n            description: result.Country.LocalizedName,\n            id: result.Key,\n            isFav: false,\n          };\n        });\n      this.setState({ results });\n    }\n  };\n\n  render() {\n    return (\n      <Search\n        placeholder=\"Search...\"\n        onResultSelect={this.handleResultSelect}\n        onSearchChange={this.handleSearchChange}\n        results={this.state.results}\n        value={this.state.userInput}\n        className=\"search-bar\"\n      />\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport \"./ForecastPreview.style.scss\";\n\nclass ForecastPreview extends React.Component {\n  state = {\n    Ftemperature: `${this.props.day.Temperature.Maximum.Value} ℉`,\n    Ctemperature: `${Math.round(\n      ((this.props.day.Temperature.Maximum.Value - 32) * 5) / 9\n    )} ℃`,\n  };\n\n  render() {\n    const iconKey = this.props.day.Day.Icon;\n    const dateToFormat = this.props.day.Date;\n    return (\n      <li className=\"forecast-preview\">\n        <Card className=\"list-item\">\n          <Image\n            src={`https://developer.accuweather.com/sites/default/files/${\n              iconKey < 10 ? \"0\" + iconKey : iconKey\n            }-s.png`}\n            wrapped\n            ui={false}\n          />\n          <Card.Content>\n            <Card.Header>\n              <Moment format=\"ddd DD/MM/YY\">{dateToFormat}</Moment>\n            </Card.Header>\n            <Card.Meta>{this.props.day.Day.IconPhrase}</Card.Meta>\n            <Card.Description>\n              {this.props.toggleCF === \"c\"\n                ? this.state.Ctemperature\n                : this.state.Ftemperature}\n            </Card.Description>\n          </Card.Content>\n          <Card.Content extra>\n            <a href={this.props.day.Link}>\n              <Icon name=\"question circle\" />\n              Read More\n            </a>\n          </Card.Content>\n        </Card>\n      </li>\n    );\n  }\n}\n\nexport default ForecastPreview;\n","import React from \"react\";\nimport \"./ForecastList.style.scss\";\nimport ForecastPreview from \"../ForecastPreview/ForecastPreview.cmp\";\n\nfunction ForecastList(props) {\n  return (\n    <div className=\"forecast-list\">\n      <ul>\n        {props.nextDaysForecast.DailyForecasts.map(day => {\n          return (\n            <ForecastPreview\n              day={day}\n              key={day.Date}\n              toggleCF={props.toggleCF}\n            ></ForecastPreview>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default ForecastList;\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { connect } from \"react-redux\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport { getNextDaysForecast } from \"../../store/actions/weatherActions\";\nimport { setCurrentCity, toggleFavorite } from \"../../store/actions/appActions\";\nimport SearchBar from \"../../components/SearchBar/SearchBar.cmp\";\nimport ForecastList from \"../../components/ForecastList/ForecastList.cmp\";\nimport { Button, Icon, Popup, Loader } from \"semantic-ui-react\";\nimport weatherService from \"../../services/WeatherService\";\n\nimport \"../../animations.scss\";\nimport \"./HomePage.style.scss\";\n\nclass HomePage extends Component {\n  state = {\n    toggleCF: \"c\",\n    popupIsOpen: false,\n    isLoaderActive: true,\n  };\n\n  async componentDidMount() {\n    const { dispatch } = this.props;\n    if (!this.props.currentCity) {\n      try {\n        let userCity = await weatherService.getUserCity();    \n        await dispatch(setCurrentCity(userCity));\n        dispatch(getNextDaysForecast(this.props.currentCity.id));\n      } catch (err) {\n        let userCity = {id: 215854,description: \"Israel\",title: \"Tel-Aviv\",isFav: false};\n        await dispatch(setCurrentCity(userCity));\n        dispatch(getNextDaysForecast(this.props.currentCity.id));\n        this.setState({ isLoaderActive: false });\n        toast(`${err.message}, Try again later`, {\n          className: \"my-toest\",\n        });\n      }\n    } else {\n      try {\n        dispatch(getNextDaysForecast(this.props.currentCity.id));\n      } catch (err) {\n        toast(`${err.message}, Try again later`, {\n          className: \"my-toest\",\n        });\n      }\n    }\n  }\n\n  toggleCF = () => {\n    this.setState(state => ({\n      toggleCF: state.toggleCF === \"c\" ? \"f\" : \"c\",\n    }));\n  };\n\n  handleToggleFavorite = async () => {\n    this.setState({ popupIsOpen: true });\n    this.timeout = setTimeout(() => {\n      this.setState({ popupIsOpen: false });\n    }, 2000);\n    const currentCity = { ...this.props.currentCity };\n    currentCity.isFav = !currentCity.isFav;\n    const { dispatch } = this.props;\n    try {\n      dispatch(toggleFavorite(this.props.currentCity));\n      dispatch(setCurrentCity(currentCity));\n    } catch (err) {\n      toast(\"There is a server problem, Try again later\", {});\n    }\n  };\n\n  setCurrentCity = async city => {\n    const { dispatch } = this.props;\n    try {\n      await dispatch(setCurrentCity(city));\n      dispatch(getNextDaysForecast(this.props.currentCity.id));\n    } catch (err) {\n      toast(\"There is a server problem, Try again later\", {});\n    }\n  };\n\n  handlePopupClose() {\n    clearTimeout(this.timeout);\n  }\n\n  render() {\n    return !this.props.nextDaysForecast ? (\n      <Loader active={this.state.isLoaderActive}>Loading</Loader>\n    ) : (\n      <ReactCSSTransitionGroup\n        transitionAppear={true}\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={600}\n        transitionLeaveTimeout={200}\n        transitionName=\"SlideIn\"\n      >\n        <div className=\"home-page\">\n          <SearchBar setCurrentCity={this.setCurrentCity}></SearchBar>\n          {this.props.currentCity ? (\n            <Popup\n              trigger={\n                <Icon\n                  name={`heart${\n                    this.props.currentCity.isFav ? \"\" : \" outline\"\n                  }`}\n                  className=\"heart-icon\"\n                />\n              }\n              content={\n                this.props.currentCity.isFav\n                  ? \"Added To Favorites\"\n                  : \"Removed From Favorites\"\n              }\n              on=\"click\"\n              open={this.state.popupIsOpen}\n              onOpen={this.handleToggleFavorite}\n              onClose={this.handlePopupClose}\n              position=\"top right\"\n            />\n          ) : (\n            \"\"\n          )}\n\n          <div className=\"content-container\">\n            <h1 className=\"headline\">{`${this.props.nextDaysForecast.Headline.Text} in ${this.props.currentCity.title}`}</h1>\n            <Button\n              onClick={this.toggleCF}\n              basic\n              color=\"grey\"\n              content={this.state.toggleCF === \"c\" ? \"View In ℉\" : \"View In ℃\"}\n            />\n            <ForecastList\n              nextDaysForecast={this.props.nextDaysForecast}\n              toggleCF={this.state.toggleCF}\n            ></ForecastList>\n          </div>\n        </div>\n      </ReactCSSTransitionGroup>\n    );\n  }\n}\n\nconst mapStateToProps = ({ weatherReducer, appReducer }) => {\n  const { nextDaysForecast } = weatherReducer;\n  const { currentCity } = appReducer;\n  return {\n    nextDaysForecast,\n    currentCity,\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\nimport \"./Segment.style.scss\";\nconst SegmentCmp = () => {\n  return (\n    <Segment placeholder className=\"segment-container\">\n      <Header icon>\n        <Icon name=\"heart\" className=\"segment-icon\"/>\n        No Favorite Cities Yet\n      </Header>\n      <Link to={\"./\"}>\n        <Button basic color=\"teal\">\n          Search For Cities\n        </Button>\n      </Link>\n    </Segment>\n  );\n};\n\nexport default SegmentCmp;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { toggleFavorite, setCurrentCity } from \"../../store/actions/appActions\";\nimport { Card, Image, Button } from \"semantic-ui-react\";\nimport weatherService from \"../../services/WeatherService\";\nimport \"./FavoritePreview.style.scss\";\n\nclass FavoritePreview extends React.Component {\n  state = { cityInfo: null };\n\n  async componentDidMount() {\n    const cityInfo = await weatherService.getCityInfo(this.props.city.id);\n    this.setState({ cityInfo });\n  }\n\n  setCurrentCity = async () => {\n    const { dispatch } = this.props;\n    await dispatch(setCurrentCity(this.props.city));\n    this.props.history.push(\"/\");\n  };\n\n  toggleFavorite = async () => {\n    const currentCity = { ...this.props.city };\n    currentCity.isFav = !currentCity.isFav;\n    const { dispatch } = this.props;\n    await dispatch(toggleFavorite(this.props.city));\n    if (currentCity.id === this.props.currentCity.id)\n      await dispatch(setCurrentCity(currentCity));\n  };\n\n  render() {\n    return (\n      this.state.cityInfo && (\n        <li className=\"favorite-preview\">\n          <Card className=\"list-item\">\n            <Image\n              src={`https://developer.accuweather.com/sites/default/files/${\n                this.state.cityInfo.WeatherIcon < 10\n                  ? \"0\" + this.state.cityInfo.WeatherIcon\n                  : this.state.cityInfo.WeatherIcon\n              }-s.png`}\n              wrapped\n              ui={false}\n            />\n            <Card.Content>\n              <Card.Meta>{this.props.city.title}</Card.Meta>\n              <Card.Description>\n                {this.state.cityInfo.WeatherText}\n                <br />\n                {this.state.cityInfo.Temperature.Metric.Value + \"℃\"}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <Button\n                basic\n                color=\"teal\"\n                onClick={this.toggleFavorite}\n                className=\"remove-btn\"\n              >\n                Remove\n              </Button>\n              <Button color=\"teal\" onClick={this.setCurrentCity}>\n                See More\n              </Button>\n            </Card.Content>\n          </Card>\n        </li>\n      )\n    );\n  }\n}\n\nconst mapStateToProps = ({ appReducer }) => {\n  const { currentCity } = appReducer;\n  return {\n    currentCity,\n  };\n};\nexport default withRouter(connect(mapStateToProps)(FavoritePreview));\n","import React from \"react\";\nimport FavoritePreview from \"../FavoritePreview/FavoritePreview.cmp\";\nimport \"./FavoritesList.style.scss\";\n\nfunction FavoritesList(props) {\n  return (\n    <div className=\"favorites-list\">\n      <ul>\n        {props.favorites.map(fav => {\n          return <FavoritePreview city={fav} key={fav.id}></FavoritePreview>;\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default FavoritesList;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport \"../../animations.scss\";\nimport Segment from \"../../components/Segment/Segment.cmp\";\nimport FavoritesList from \"../../components/FavoritesList/FavoritesList.cmp\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport { getFavorites } from \"../../store/actions/appActions\";\n\nclass FavoritesPage extends React.Component {\n  async componentDidMount() {\n    const { dispatch } = this.props;\n    try {\n      await dispatch(getFavorites());\n    } catch (err) {\n      toast(\"There is a server problem, Try again later\", {\n      });\n    }\n  }\n\n  render() {\n    return (\n      <ReactCSSTransitionGroup\n        transitionAppear={true}\n        transitionAppearTimeout={600}\n        transitionEnterTimeout={600}\n        transitionLeaveTimeout={200}\n        transitionName=\"SlideIn\"\n      >\n        <div>\n          {this.props.favorites.length ? (\n            <FavoritesList favorites={this.props.favorites}></FavoritesList>\n          ) : (\n            <Segment></Segment>\n          )}\n        </div>\n      </ReactCSSTransitionGroup>\n    );\n  }\n}\n\nconst mapStateToProps = ({ appReducer }) => {\n  const { favorites } = appReducer;\n  return {\n    favorites,\n  };\n};\n\nexport default connect(mapStateToProps)(FavoritesPage);\n","import React, { Component } from \"react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { ToastContainer} from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header.cmp\";\nimport HomePage from \"./pages/HomePage/HomePage.cmp\";\nimport FavoritesPage from \"./pages/FavoritesPage/FavoritesPage.cmp\";\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"app-container\">\n        <ToastContainer />\n        <Router>\n          <Header></Header>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/favorites\" component={FavoritesPage} />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from \"redux\";\nimport weatherReducer from \"./weatherReducer\";\nimport appReducer from \"./appReducer\";\n\nconst combinedReducer = combineReducers({\n  weatherReducer,\n  appReducer,\n});\n\nexport default combinedReducer;\n","import types from \"../types\";\n\nexport default function \n    weatherReducer(state = {}, action) {\n    switch (action.type) {\n        case types.FETCH_FORECAST:\n        return {...state , nextDaysForecast: action.data}; \n      default:\n        return state;\n    }\n  }","import types from \"../types\";\n\nexport default function \n    appReducer(state = {cuurentCity:null , favorites:[] }, action) {\n    switch (action.type) {\n        case types.SET_CURRENTCITY:\n        return {...state , currentCity: action.data}; \n        case types.FETCH_FAVORITES:          \n        return {...state , favorites: action.data}; \n        case types.TOGGLE_FAVORITE:          \n        return {...state , favorites: action.data}; \n      default:\n        return state;\n    }\n  }","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer from \"./store/reducers\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV !== \"production\") {\n  middleware.push(createLogger());\n}\nconst store = createStore(reducer, applyMiddleware(...middleware));\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}